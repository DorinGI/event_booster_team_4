{"mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,WAC1C,MACMC,EAAsBF,SAASG,eAAe,wBAGpDC,eAAeC,EAASC,GACpB,MAAMC,EAAUP,SAASQ,cAAc,UACvCD,EAAQE,UAAY,+BAA+BH,WAEnD,IACI,MAAMI,QAAiBC,MAAM,yDAAyDL,6CAChFM,QAAaF,EAASG,OAC5BC,QAAQC,IAAIH,GACRA,EAAKI,WAAaJ,EAAKI,UAAUC,QAUvBA,EATGL,EAAKI,UAAUC,OAUpBjB,SAASQ,cAAc,UAC/BC,UAAYQ,EAAOC,KAAIC,IAE3B,MAAMC,EAAOD,EAAME,OAASF,EAAME,MAAMC,MAAQH,EAAME,MAAMC,MAAMC,UAAY,qBACxEC,EAAWL,EAAMH,WAAaG,EAAMH,UAAUS,QAAUN,EAAMH,UAAUS,OAAOC,OAAS,EACxFP,EAAMH,UAAUS,OAAO,GAAGE,KAC1B,yBAEN,MAAO,uEAEaR,EAAMS,OAAO,GAAGC,aAAaV,EAAMQ,uGAElBR,EAAMQ,2DACRP,2DACII,yEAGtC,IACFM,KAAK,KA1BAvB,EAAQE,UAAY,iCAAiCH,Q,CAE3D,MAAOyB,GACLxB,EAAQE,UAAY,qCAAqCH,Q,CAIjE,IAAsBW,C,CAkEtBZ,EAAS,GA5CT,SAAS2B,EAAiBC,GACtB/B,EAAoBO,UAAY,GAEhC,MAAMyB,EAAmB,CAAC5B,EAAM6B,GAAW,EAAOC,GAAa,KAC3D,MAAMC,EAASrC,SAASsC,cAAc,UAQtC,OAPAD,EAAOE,YAAcjC,EACjB6B,GAAUE,EAAOG,UAAUC,IAAI,UAC/BL,IAAYC,EAAOK,UAAW,GAClCL,EAAOpC,iBAAiB,SAAS,KAC7BI,EAASC,GACT0B,EAAiB1B,EAAK,IAEnB+B,CAAM,EAIXM,EAAYC,KAAKC,IAAI,EAAGZ,EAAcW,KAAKE,MAAMC,MACjDC,EAAUJ,KAAKK,IA7DN,GA6DsBN,EAFX,EAE2C,GAErE,GAAIA,EAAY,IACZzC,EAAoBgD,YAAYhB,EAAiB,IAC7CS,EAAY,GAAG,CACf,MAAMQ,EAAOnD,SAASsC,cAAc,UACpCa,EAAKZ,YAAc,MACnBY,EAAKT,UAAW,EAChBxC,EAAoBgD,YAAYC,E,CAIxC,IAAK,IAAIC,EAAIT,EAAWS,GAAKJ,EAASI,IAClClD,EAAoBgD,YAAYhB,EAAiBkB,EAAGA,IAAMnB,IAG9D,GAAIe,EA7EW,GA6EW,CACtB,GAAIA,EAAUK,GAAgB,CAC1B,MAAMF,EAAOnD,SAASsC,cAAc,UACpCa,EAAKZ,YAAc,MACnBY,EAAKT,UAAW,EAChBxC,EAAoBgD,YAAYC,E,CAEpCjD,EAAoBgD,YAAYhB,EApFrB,I,EAyFnBF,CAAiB,E","sources":["src/footer.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function() {\n    const totalPages = 29;\n    const paginationContainer = document.getElementById(\"pagination-container\");\n    const apiKey = 'Z9sML3GkU2JtjpwYuKAphTWzMdRrsxCG';\n\n    async function loadPage(page) {\n        const content = document.querySelector(\".cards\");\n        content.innerHTML = `<p>Loading content for page ${page}...</p>`;\n        \n        try {\n            const response = await fetch(`https://app.ticketmaster.com/discovery/v2/events?page=${page}&apikey=${apiKey}`);\n            const data = await response.json();\n            console.log(data); \n            if (data._embedded && data._embedded.events) {\n                displayCards(data._embedded.events);\n            } else {\n                content.innerHTML = `<p>No data available for page ${page}.</p>`;\n            }\n        } catch (error) {\n            content.innerHTML = `<p>Error loading content for page ${page}.</p>`;\n        }\n    }\n\n    function displayCards(events) {\n        const content = document.querySelector(\".cards\");\n        content.innerHTML = events.map(event => {\n            \n            const date = event.dates && event.dates.start ? event.dates.start.localDate : 'Date not available';\n            const location = event._embedded && event._embedded.venues && event._embedded.venues.length > 0 \n                ? event._embedded.venues[0].name \n                : 'Location not available';\n    \n            return `\n                <div class=\"card\">\n                    <img src=\"${event.images[0].url}\" alt=\"${event.name}\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\">${event.name}</h5>\n                        <p class=\"card-date\">${date}</p>\n                        <p class=\"card-location\">${location}</p>\n                    </div>\n                </div>\n            `;\n        }).join('');\n    }\n\n    function createPagination(currentPage) {\n        paginationContainer.innerHTML = '';\n\n        const createPageButton = (page, isActive = false, isDisabled = false) => {\n            const button = document.createElement('button');\n            button.textContent = page;\n            if (isActive) button.classList.add('active');\n            if (isDisabled) button.disabled = true;\n            button.addEventListener('click', () => {\n                loadPage(page);\n                createPagination(page);\n            });\n            return button;\n        };\n\n        const maxVisibleButtons = 5;\n        const startPage = Math.max(1, currentPage - Math.floor(maxVisibleButtons / 2));\n        const endPage = Math.min(totalPages, startPage + maxVisibleButtons - 1);\n\n        if (startPage > 1) {\n            paginationContainer.appendChild(createPageButton(1));\n            if (startPage > 2) {\n                const dots = document.createElement('button');\n                dots.textContent = '...';\n                dots.disabled = true;\n                paginationContainer.appendChild(dots);\n            }\n        }\n\n        for (let i = startPage; i <= endPage; i++) {\n            paginationContainer.appendChild(createPageButton(i, i === currentPage));\n        }\n\n        if (endPage < totalPages) {\n            if (endPage < totalPages - 1) {\n                const dots = document.createElement('button');\n                dots.textContent = '...';\n                dots.disabled = true;\n                paginationContainer.appendChild(dots);\n            }\n            paginationContainer.appendChild(createPageButton(totalPages));\n        }\n    }\n\n    loadPage(1); // Load the first page initially\n    createPagination(1); // Initialize pagination\n});"],"names":["document","addEventListener","paginationContainer","getElementById","async","loadPage","page","content","querySelector","innerHTML","response","fetch","data","json","console","log","_embedded","events","map","event","date","dates","start","localDate","location","venues","length","name","images","url","join","error","createPagination","currentPage","createPageButton","isActive","isDisabled","button","createElement","textContent","classList","add","disabled","startPage","Math","max","floor","maxVisibleButtons","endPage","min","appendChild","dots","i","totalPages"],"version":3,"file":"index.205e6e32.js.map"}